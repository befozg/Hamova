{"ast":null,"code":"var _jsxFileName = \"/home/karen-1999/books/Hamova/Hamova/src/App.jsx\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nconst INTERVAL = 100;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.stopTimer = () => {\n      this.setState({\n        stopped: !this.state.stopped\n      });\n\n      if (this.state.stopped) {\n        clearInterval(this.timerID);\n      } else {\n        this.timerID = setInterval(() => this.increment(), 1000 / INTERVAL);\n      }\n\n      ;\n    };\n\n    this.resetTimer = () => {\n      this.setState({\n        value: 0\n      });\n    };\n\n    this.increment = () => {\n      if (!this.state.stopped) this.setState({\n        value: this.state.value + 1\n      });\n    };\n\n    this.state = {\n      value: 0\n    };\n    this.stopTimer = this.stopTimer.bind(this);\n    this.resetTimer = this.resetTimer.bind(this);\n    this.state = {\n      value: 0,\n      stopped: false\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.increment(), 1000 / INTERVAL);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    const value = this.state.value;\n    return React.createElement(\"div\", {\n      className: \"container-fluid align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"display-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"\\u0422\\u0430\\u0439\\u043C\\u0435\\u0440\"), React.createElement(\"h1\", {\n      className: \"display-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"kbd\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, Math.floor(value / INTERVAL / 60 / 60)), \" : \"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"kbd\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, Math.floor(value / INTERVAL / 60) % 60), \" : \"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"kbd\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, Math.floor(value / INTERVAL) % 60), \" . \"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"kbd\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, value % INTERVAL < 10 ? '0' : '', value % INTERVAL))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"display-4\",\n      onClick: this.stopTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.state.stopped ? 'Продолжить' : 'Остановить'), React.createElement(\"button\", {\n      className: \"display-4\",\n      onClick: this.resetTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/karen-1999/books/Hamova/Hamova/src/App.jsx"],"names":["React","INTERVAL","App","Component","constructor","props","stopTimer","setState","stopped","state","clearInterval","timerID","setInterval","increment","resetTimer","value","bind","componentDidMount","componentWillUnmount","render","Math","floor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nconst INTERVAL = 100;\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: 0};\n        this.stopTimer = this.stopTimer.bind(this);\n        this.resetTimer = this.resetTimer.bind(this);\n        this.state = {value: 0, stopped: false};\n    }\n    stopTimer = () => {\n        this.setState({stopped: !this.state.stopped});\n        if(this.state.stopped){\n            clearInterval(this.timerID);\n        }\n        else\n        {\n            this.timerID = setInterval(() => this.increment(), 1000/INTERVAL);\n        };\n    }\n\n    resetTimer = () => {\n        this.setState({value: 0});\n    }\n    increment = () => {\n        if(!this.state.stopped) (this.setState({value: this.state.value + 1}));\n    }\n    componentDidMount() {\n        this.timerID = setInterval(() => this.increment(), 1000/INTERVAL);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    render() {\n        const value = this.state.value\n        return (\n            <div className=\"container-fluid align-items-center\">\n                <h1 className=\"display-1\">Таймер</h1>\n                <h1 className=\"display-1\">\n                    <span><kbd>{Math.floor(value / INTERVAL / 60 / 60)}</kbd> : </span>\n                    <span><kbd>{Math.floor(value / INTERVAL / 60) % 60}</kbd> : </span>\n                    <span><kbd>{Math.floor(value / INTERVAL) % 60}</kbd> . </span>\n                    <span><kbd>{value % INTERVAL < 10 ? '0' : ''}{value % INTERVAL}</kbd></span>\n                </h1>\n                <div>\n                    <button className=\"display-4\" onClick={this.stopTimer}>{this.state.stopped?'Продолжить':'Остановить'}\n                    </button>\n                    <button className=\"display-4\" onClick={this.resetTimer}>Сбросить</button>\n                </div>\n            </div>);\n    }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}