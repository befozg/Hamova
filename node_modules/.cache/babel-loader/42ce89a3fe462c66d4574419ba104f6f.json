{"ast":null,"code":"var _jsxFileName = \"/home/karen-1999/books/Hamova/Hamova/src/App.jsx\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nconst INTERVAL = 100;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0\n    };\n  }\n\n  increment() {\n    this.setState({\n      value: this.state.value + 1\n    });\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.increment(), 1000 / INTERVAL);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    const value = this.state.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"\\u0422\\u0430\\u0439\\u043C\\u0435\\u0440:\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, Math.floor(value / INTERVAL / 60 / 60), \" : \"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, Math.floor(value / INTERVAL / 60) % 60, \" : \"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, Math.floor(value / INTERVAL) % 60, \" . \"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, value % INTERVAL)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/karen-1999/books/Hamova/Hamova/src/App.jsx"],"names":["React","INTERVAL","App","Component","constructor","props","state","value","increment","setState","componentDidMount","timerID","setInterval","componentWillUnmount","clearInterval","render","Math","floor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,MAAMC,QAAQ,GAAG,GAAjB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAE9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAb;AACH;;AAEDC,EAAAA,SAAS,GAAE;AACP,SAAKC,QAAL,CAAc;AAACF,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA3B,KAAd;AACH;;AAEDG,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,OAAL,GAAeC,WAAW,CAAC,MAAM,KAAKJ,SAAL,EAAP,EAAyB,OAAKP,QAA9B,CAA1B;AACH;;AAEDY,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,aAAa,CAAC,KAAKH,OAAN,CAAb;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,UAAMR,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAzB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOS,IAAI,CAACC,KAAL,CAAWV,KAAK,GAACN,QAAN,GAAe,EAAf,GAAkB,EAA7B,CAAP,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOe,IAAI,CAACC,KAAL,CAAWV,KAAK,GAACN,QAAN,GAAe,EAA1B,IAAgC,EAAvC,QAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOe,IAAI,CAACC,KAAL,CAAWV,KAAK,GAACN,QAAjB,IAA6B,EAApC,QAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOM,KAAK,GAAGN,QAAf,CAJJ,CAFJ,CADJ;AAWH;;AAhC6B;;AAkClC,eAAeC,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nconst INTERVAL = 100;\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: 0};\n    }\n\n    increment(){\n        this.setState({value: this.state.value + 1});\n    }\n\n    componentDidMount() {\n        this.timerID = setInterval(() => this.increment(), 1000/INTERVAL);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    render() {\n        const value = this.state.value\n        return (\n            <div>\n                <p>Таймер:</p>\n                <p>\n                    <span>{Math.floor(value/INTERVAL/60/60)} : </span>\n                    <span>{Math.floor(value/INTERVAL/60) % 60} : </span>\n                    <span>{Math.floor(value/INTERVAL) % 60} . </span>\n                    <span>{value % INTERVAL}</span>\n                </p>\n            </div>\n        );\n    }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}